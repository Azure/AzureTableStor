% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table_batch_request.R
\name{create_batch_operation}
\alias{create_batch_operation}
\alias{do_batch_transaction}
\title{Batch transactions for table storage}
\usage{
create_batch_operation(
  endpoint,
  path,
  options = list(),
  headers = list(),
  body = NULL,
  metadata = c("none", "minimal", "full"),
  http_verb = c("GET", "PUT", "POST", "PATCH", "DELETE", "HEAD")
)

do_batch_transaction(
  endpoint,
  operations,
  batch_status_handler = c("warn", "stop", "message", "pass")
)
}
\arguments{
\item{endpoint}{A table storage endpoint, of class \code{table_endpoint}.}

\item{path}{The path component of the operation.}

\item{options}{A named list giving the query parameters for the operation.}

\item{headers}{A named list giving any additional HTTP headers to send to the host. AzureCosmosR will handle authentication details, so you don't have to specify these here.}

\item{body}{The request body for a PUT/POST/PATCH operation.}

\item{metadata}{The level of ODATA metadata to include in the response.}

\item{http_verb}{The HTTP verb (method) for the operation.}

\item{operations}{For \code{do_batch_transaction}, a list of individual operations to be batched up.}

\item{batch_status_handler}{For \code{do_batch_transaction}, what to do if one or more of the batch operations fails. The default is to signal a warning and return a list of response objects, from which the details of the failure(s) can be determined. Set this to "pass" to ignore the failure.}
}
\value{
\code{create_batch_operation} returns an object of class \code{batch_operation}.

\code{do_batch_transaction} returns a list of objects of class \code{batch_operation_response}, representing the results of each individual operation. Each object contains elements named \code{status}, \code{headers} and \code{body} containing the respective parts of the response. Note that the number of returned objects may be smaller than the number of operations in the batch, if the transaction failed.
}
\description{
Batch transactions for table storage
}
\details{
Table storage supports batch transactions on entities that are in the same table and belong to the same partition group. Batch transactions are also known as \emph{entity group transactions}.

You can use \code{create_batch_operation} to produce an object corresponding to a single table storage operation, such as inserting, deleting or updating an entity. Multiple such objects can then be passed to \code{do_batch_transaction}, which will carry them out as a single atomic transaction.

Note that batch transactions are subject to some limitations imposed by the REST API:
\itemize{
\item All entities subject to operations as part of the transaction must have the same \code{PartitionKey} value.
\item An entity can appear only once in the transaction, and only one operation may be performed against it.
\item The transaction can include at most 100 entities, and its total payload may be no more than 4 MB in size.
}
}
\seealso{
\link{import_table_entities}, which uses (multiple) batch transactions under the hood

\href{https://docs.microsoft.com/en-us/rest/api/storageservices/performing-entity-group-transactions}{Performing entity group transactions}
}
